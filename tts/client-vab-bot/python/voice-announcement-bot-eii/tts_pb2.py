# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tts.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\ttts.proto\x12\x03tts\"[\n\x13TextToSpeechRequest\x12\x12\n\nspeaker_id\x18\x01 \x01(\x05\x12\x11\n\ttext_data\x18\x02 \x01(\t\x12\x0e\n\x06\x64\x65vice\x18\x03 \x01(\t\x12\r\n\x05\x61lpha\x18\x04 \x01(\x02\"A\n\x11TextToSpeechReply\x12\x14\n\x0c\x61udio_output\x18\x01 \x01(\x0c\x12\x16\n\x0einference_time\x18\x02 \x01(\x02\"(\n\x0e\x43\x61\x63hingRequest\x12\x16\n\x0e\x65nable_caching\x18\x01 \x01(\x08\"!\n\x0f\x43\x61\x63hingResponse\x12\x0e\n\x06status\x18\x01 \x01(\t2\x87\x01\n\x03Tts\x12\x42\n\x0cTextToSpeech\x12\x18.tts.TextToSpeechRequest\x1a\x16.tts.TextToSpeechReply\"\x00\x12<\n\rEnableCaching\x12\x13.tts.CachingRequest\x1a\x14.tts.CachingResponse\"\x00\x62\x06proto3')



_TEXTTOSPEECHREQUEST = DESCRIPTOR.message_types_by_name['TextToSpeechRequest']
_TEXTTOSPEECHREPLY = DESCRIPTOR.message_types_by_name['TextToSpeechReply']
_CACHINGREQUEST = DESCRIPTOR.message_types_by_name['CachingRequest']
_CACHINGRESPONSE = DESCRIPTOR.message_types_by_name['CachingResponse']
TextToSpeechRequest = _reflection.GeneratedProtocolMessageType('TextToSpeechRequest', (_message.Message,), {
  'DESCRIPTOR' : _TEXTTOSPEECHREQUEST,
  '__module__' : 'tts_pb2'
  # @@protoc_insertion_point(class_scope:tts.TextToSpeechRequest)
  })
_sym_db.RegisterMessage(TextToSpeechRequest)

TextToSpeechReply = _reflection.GeneratedProtocolMessageType('TextToSpeechReply', (_message.Message,), {
  'DESCRIPTOR' : _TEXTTOSPEECHREPLY,
  '__module__' : 'tts_pb2'
  # @@protoc_insertion_point(class_scope:tts.TextToSpeechReply)
  })
_sym_db.RegisterMessage(TextToSpeechReply)

CachingRequest = _reflection.GeneratedProtocolMessageType('CachingRequest', (_message.Message,), {
  'DESCRIPTOR' : _CACHINGREQUEST,
  '__module__' : 'tts_pb2'
  # @@protoc_insertion_point(class_scope:tts.CachingRequest)
  })
_sym_db.RegisterMessage(CachingRequest)

CachingResponse = _reflection.GeneratedProtocolMessageType('CachingResponse', (_message.Message,), {
  'DESCRIPTOR' : _CACHINGRESPONSE,
  '__module__' : 'tts_pb2'
  # @@protoc_insertion_point(class_scope:tts.CachingResponse)
  })
_sym_db.RegisterMessage(CachingResponse)

_TTS = DESCRIPTOR.services_by_name['Tts']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TEXTTOSPEECHREQUEST._serialized_start=18
  _TEXTTOSPEECHREQUEST._serialized_end=109
  _TEXTTOSPEECHREPLY._serialized_start=111
  _TEXTTOSPEECHREPLY._serialized_end=176
  _CACHINGREQUEST._serialized_start=178
  _CACHINGREQUEST._serialized_end=218
  _CACHINGRESPONSE._serialized_start=220
  _CACHINGRESPONSE._serialized_end=253
  _TTS._serialized_start=256
  _TTS._serialized_end=391
# @@protoc_insertion_point(module_scope)
